{"version":3,"sources":["components/AppHeader/AppHeader.js","components/ItemStatusFilter/index.js","components/ItemStatusFilter/ItemStatusFilter.js","components/SearchPanel/SearchPanel.js","components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/AddTodoForm/AddTodoForm.js","mocks/initialTodos.js","components/App/App.js","index.js"],"names":["AppHeader","toDo","done","className","ItemStatusFilter","filterMode","setFilterMode","name","label","map","isActive","buttonClassName","classNames","onClick","type","SearchPanel","handleSearchInputChange","useState","searchValue","setSearchValue","onChange","evt","value","target","placeholder","TodoListItem","todoText","isDone","isImportant","handleDeleteButtonClick","handleChangeIsDoneState","handleChangeIsImportantState","todoItemClass","cn","important","TodoList","todos","deleteTodo","listItems","id","todo","AddTodoForm","handleSubmit","values","setValues","newTodoText","onSubmit","preventDefault","disabled","initialTodos","App","todosList","searchText","todoData","setTodoData","searchPhrase","setSearchPhrase","filter","length","toggleIsDoneStateOnSelectedTodo","useCallback","selectedTodoId","newData","toggleIsImportantStateOnSelectedTodo","deletedTodoId","handleSubmitAddTodoForm","newTodo","Math","round","random","toString","searchInputValue","visibleTodos","filterTodos","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfd25121.chunk.js","sourcesContent":["import React from 'react';\nimport './AppHeader.css';\n\nexport const AppHeader = ({ toDo, done }) => {\n  return (\n    <div className=\"header\">\n      <h1>Todo List</h1>\n      <h2>\n        {toDo} more to do, {done} done\n      </h2>\n    </div>\n  );\n};\n","import ItemStatusFilter from './ItemStatusFilter';\n\nexport default ItemStatusFilter;\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport './ItemStatusFilter.css';\n\nconst ItemStatusFilter = ({ filterMode, setFilterMode }) => {\n  const buttons = [\n    {\n      name: 'all',\n      label: 'All',\n    },\n    {\n      name: 'active',\n      label: 'Active',\n    },\n    {\n      name: 'done',\n      label: 'Done',\n    },\n  ];\n\n  return buttons.map(({ name, label }) => {\n    const isActive = filterMode === name;\n    const buttonClassName = classNames('btn', {\n      'btn-info': isActive,\n      'btn-outline-secondary': !isActive,\n    });\n    return (\n      <button\n        onClick={() => setFilterMode(name)}\n        key={name}\n        type=\"button\"\n        className={buttonClassName}\n      >\n        {label}\n      </button>\n    );\n  });\n};\n\nexport default ItemStatusFilter;\n","import React, { useState } from 'react';\nimport './SearchPanel.css';\n\nexport const SearchPanel = ({ handleSearchInputChange }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleInputchange = (evt) => {\n    const { value } = evt.target;\n    setSearchValue(value);\n    handleSearchInputChange(value);\n  };\n\n  return (\n    <input\n      name=\"search\"\n      onChange={handleInputchange}\n      value={searchValue}\n      className=\"form-control search-input\"\n      placeholder=\"Type to search...\"\n    />\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport './TodoListItem.css';\n\nexport const TodoListItem = ({\n  todoText,\n  isDone,\n  isImportant,\n  handleDeleteButtonClick,\n  handleChangeIsDoneState,\n  handleChangeIsImportantState,\n}) => {\n  const todoItemClass = cn('todo-list-item', {\n    done: isDone,\n    important: isImportant,\n  });\n\n  return (\n    <span className={todoItemClass}>\n      <span onClick={handleChangeIsDoneState} className=\"todo-list-item-text\">\n        {todoText}\n      </span>\n\n      <button\n        onClick={handleChangeIsImportantState}\n        type=\"button\"\n        className=\"btn btn-outline-success btn-sm float-right\"\n      >\n        <i className=\"fa fa-exclamation\" />\n      </button>\n\n      <button\n        onClick={handleDeleteButtonClick}\n        type=\"button\"\n        className=\"btn btn-outline-danger btn-sm float-right\"\n      >\n        <i className=\"fa fa-trash-o\" />\n      </button>\n    </span>\n  );\n};\n","import { TodoListItem } from '../TodoListItem/TodoListItem';\nimport './TodoList.css';\n\nexport const TodoList = ({\n  todos,\n  deleteTodo,\n  handleChangeIsDoneState,\n  handleChangeIsImportantState,\n}) => {\n  const listItems = todos.map(({ id, ...todo }) => (\n    <li key={id} className=\"list-group-item\">\n      <TodoListItem\n        {...todo}\n        handleDeleteButtonClick={() => {\n          deleteTodo(id);\n        }}\n        handleChangeIsDoneState={() => {\n          handleChangeIsDoneState(id);\n        }}\n        handleChangeIsImportantState={() => {\n          handleChangeIsImportantState(id);\n        }}\n      />\n    </li>\n  ));\n\n  return <ul className=\"list-group todo-list\">{listItems}</ul>;\n};\n","import React, { useState } from 'react';\nimport './AddTodoForm.css';\n\nexport const AddTodoForm = ({ handleSubmit }) => {\n  const [values, setValues] = useState({});\n\n  const handleInputChange = (evt) => {\n    const { name, value } = evt.target;\n    setValues((values) => ({ ...values, [name]: value }));\n  };\n  const { newTodoText } = values;\n\n  const handleSubmitForm = (evt) => {\n    evt.preventDefault();\n    if (!newTodoText) {\n      return;\n    } else {\n      handleSubmit(newTodoText);\n      setValues({});\n    }\n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={handleSubmitForm}>\n      <input\n        className=\"form-control add-input\"\n        onChange={handleInputChange}\n        type=\"text\"\n        id=\"add-todo\"\n        name=\"newTodoText\"\n        placeholder=\"Add a new TODO here...\"\n        value={newTodoText || ''}\n      />\n      <button\n        className=\"btn btn-outline-success btn-sm float-right\"\n        type=\"submit\"\n        id=\"addSubmit\"\n        name=\"addSubmit\"\n        disabled={!newTodoText}\n      >\n        Add TODO\n      </button>\n    </form>\n  );\n};\n","export const initialTodos = [\n  {\n    todoText: 'Drink Coffee',\n    isImportant: false,\n    isDone: true,\n    id: '1',\n  },\n  {\n    todoText: 'build cool Application',\n    isImportant: false,\n    isDone: true,\n    id: '2',\n  },\n  { todoText: 'Learn React', isImportant: true, isDone: false, id: '3' },\n];\n","import React, { useCallback, useState } from 'react';\nimport { AppHeader } from '../AppHeader/AppHeader';\nimport ItemStatusFilter from '../ItemStatusFilter';\nimport { SearchPanel } from '../SearchPanel/SearchPanel';\nimport { TodoList } from '../TodoList/TodoList';\nimport { AddTodoForm } from '../AddTodoForm/AddTodoForm';\nimport { initialTodos } from '../../mocks/initialTodos';\nimport './App.css';\n\nexport const App = () => {\n  const [todoData, setTodoData] = useState(initialTodos);\n  const [searchPhrase, setSearchPhrase] = useState('');\n  const [filterMode, setFilterMode] = useState('all');\n\n  const done = todoData.filter((todo) => todo.isDone).length;\n  const toDo = todoData.filter((todo) => !todo.isDone).length;\n\n  const toggleIsDoneStateOnSelectedTodo = useCallback(\n    (selectedTodoId) => {\n      const newData = todoData.map((todo) => {\n        if (todo.id === selectedTodoId) {\n          todo.isDone = !todo.isDone;\n          return todo;\n        } else return todo;\n      });\n      setTodoData(newData);\n    },\n    [todoData],\n  );\n\n  const toggleIsImportantStateOnSelectedTodo = useCallback(\n    (selectedTodoId) => {\n      const newData = todoData.map((todo) => {\n        return todo.id === selectedTodoId ? { ...todo, isImportant: !todo.isImportant } : todo;\n      });\n      setTodoData(newData);\n    },\n    [todoData],\n  );\n  const deleteTodo = useCallback(\n    (deletedTodoId) => {\n      setTodoData(todoData.filter((todo) => todo.id !== deletedTodoId));\n    },\n    [todoData],\n  );\n\n  const handleSubmitAddTodoForm = useCallback(\n    (newTodoText) => {\n      const newTodo = {\n        todoText: newTodoText,\n        isImportant: false,\n        isDone: false,\n        id: Math.round(Math.random() * 10 ** 10).toString(),\n      };\n      setTodoData([...todoData, newTodo]);\n    },\n    [todoData],\n  );\n\n  const handleSearchInputChange = useCallback((searchInputValue) => {\n    setSearchPhrase(searchInputValue);\n  }, []);\n\n  const searchTodo = (todosList, searchText) => {\n    if (!searchPhrase) {\n      return todosList;\n    } else {\n      return todosList.filter(({ todoText }) =>\n        todoText.toLowerCase().includes(searchText.toLowerCase()),\n      );\n    }\n  };\n\n  const filterTodos = (todosList, filterMode) => {\n    switch (filterMode) {\n      case 'all':\n        return todosList;\n      case 'active':\n        return todosList.filter(({ isDone }) => !isDone);\n      case 'done':\n        return todosList.filter(({ isDone }) => isDone);\n      default:\n        return todosList;\n    }\n  };\n\n  const visibleTodos = filterTodos(searchTodo(todoData, searchPhrase), filterMode);\n\n  return (\n    <>\n      <AppHeader toDo={toDo} done={done} />\n      <div className=\"search-panel\">\n        <SearchPanel handleSearchInputChange={handleSearchInputChange} />\n        <ItemStatusFilter filterMode={filterMode} setFilterMode={setFilterMode} />\n      </div>\n      <AddTodoForm handleSubmit={handleSubmitAddTodoForm} />\n      <TodoList\n        todos={visibleTodos}\n        deleteTodo={deleteTodo}\n        handleChangeIsDoneState={toggleIsDoneStateOnSelectedTodo}\n        handleChangeIsImportantState={toggleIsImportantStateOnSelectedTodo}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}